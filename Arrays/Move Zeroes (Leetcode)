Q) Move Zeroes (Leetcode

Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.
Note that you must do this in-place without making a copy of the array.

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]

Example 2:

Input: nums = [0]
Output: [0]


****** Brute Force ******

class Solution {
    public void moveZeroes(int[] nums) {

      ArrayList<Integer> temp = new ArrayList<>();
        for (int i = 0; i < n; i++)
        {
            if (nums[i] != 0)
                temp.add(nums[i]);
        }

        int nz = temp.size();

        for (int i = 0; i < nz; i++)
        {
            nums[i] = temp.get(i);
        }

        for (int i = nz; i < n; i++) {
            nums[i] = 0;
        }

    }
}


Time Complexity: O(2n)
Space Complexity: O(n)


****** Optimised Approach ******

class Solution {
    public void moveZeroes(int[] nums) {
        
        int count= 0;
        
        for(int i=0;i<nums.length;i++) 
         {
            if(nums[i]==0) 
             { 
                continue;
             }
            
            else
             {
                nums[count]=nums[i];
                count++ ;
            }
            
            
        }
        
        for(int i=count;i<nums.length;i++) 
           {
            
            nums[i]= 0;
            
        }
        
        
    }
}

Time Complexity: O(n)
Space Complexity: O(1)
