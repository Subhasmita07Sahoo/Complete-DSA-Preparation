Q) Pascal's Triangle (Leetcode)

Given an integer numRows, return the first numRows of Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]

class Solution {
    public List<List<Integer>> generate(int numRows) {
        
        List<List<Integer>> ans =  new ArrayList<>();
        
        for(int row=1; row<=numRows ; row++)
        {
            ans.add(generateRow(row));
        }
        
        return ans;
    }
    
    public static List<Integer> generateRow(int n)
    {
        List<Integer> ansRow = new ArrayList<>();
        long res = 1 ;
        ansRow.add((int)res);
        
        
        for(int i=1;i<n;i++)
        {
            res = res * (n-i);
            res = res / i ;
            ansRow.add((int)res);
        }
        return ansRow ;
    }
}

Time Complexity: O(n2), where n = number of rows
Space Complexity: O(n)
