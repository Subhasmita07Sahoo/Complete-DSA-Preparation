Q) Missing And Repeating (GFG)

Given an unsorted array arr of positive integers. One number a from the set [1, 2,....,n] is missing and one number b occurs twice in the array. Find numbers a and b.

Note: The test cases are generated such that there always exists one missing and one repeating number within the range [1,n].

Examples:

Input: arr[] = [2, 2]
Output: [2, 1]
Explanation: Repeating number is 2 and smallest positive missing number is 1.
Input: arr[] = [1, 3, 3] 
Output: [3, 2]
Explanation: Repeating number is 3 and smallest positive missing number is 2


// User function Template for Java

class Solve {
    int[] findTwoElement(int a[]) {
        // code here
        
        long n = a.length;

        // Calculate S and S^2:
        long S = 0, S2 = 0;
        for (int i = 0; i < n; i++) 
        {
            S += a[i];
            S2 += (long)a[i] * (long)a[i];
        }
        
        // Find Sn and S2n:
        long SN = (n * (n + 1)) / 2;
        long S2N = (n * (n + 1) * (2 * n + 1)) / 6;
        
        //S-Sn = X-Y:
        long val1 = S - SN;

        // S2-S2n = X^2-Y^2:
        long val2 = S2 - S2N;

        //Find X+Y = (X^2-Y^2)/(X-Y):
        val2 = val2 / val1;
        
        long x = (val1 + val2) / 2;
        long y = val2 - x ;

        int[] ans = {(int)x, (int)y};
        return ans;
    }
}

Time Complexity: O(N)
Space Complexity: O(1)
